"""
ПРИМЕР РАБОТЫ КОДА:

Введите количество узлов: 5
Введите 5 точек в формате "x y":
13.5 4.90583
13.7 4.92007
13.9 4.93459
14.1 4.94882
14.3 4.96571
Нижний предел интегрирования: 13.5
Верхний предел интегрирования: 14.3
ОИ от полинома Лагранжа на отрезке [13.5, 14.3] равен: 3.947736355584957
"""

def num_int(a, b, xy, h=0.0001):
    """
    Численно интегрирует многочлен Лагранжа, определенный точками xy, на интервале [a, b]

    Args:
        a (float): Нижний предел интегрирования
        b (float): Верхний предел интегрирования
        xy (list): Список точек (x, y), определяющих многочлен
        h (float, optional): Шаг для численного интегрирования. Defaults to 0.0001.

    Returns:
        float: Приблизительное значение интеграла
    """
    n = int((b - a) / h) 
    s = 0.5 * (interpolate(xy, a) + interpolate(xy, b))

    for k in range(1, n):
        x_k = a + k * h
        s += interpolate(xy, x_k)

    return s * h


def interpolate(xy, x, s = 0):
    """
    Вычисляет значение многочлена Лагранжа в заданной точке x, используя точки (x, y)

    Args:
        xy (list): Список точек (x, y), определяющих многочлен Лагранжа
        x (float): Значение x, в котором считаем многочлен
        s (int, optional): Начальное значение суммы. Defaults to 0.

    Returns:
        float: Значение y многочлена в точке x
    """
    for i, v in enumerate(xy):
        l = 1 # базисный многочлен Лагранжа Li(x)
        for j, k in enumerate(xy):
            if not (k[0] == v[0]):
                l *= (x - k[0]) / (v[0] - k[0])
        s += l * v[1]
    return s


n = int(input('Введите количество узлов: '))
xy = []

print(f'Введите {n} точек в формате "x y":')
for _ in range(n):
    x, y = map(float, input().split())
    xy.append((x, y))

a = float(input('Нижний предел интегрирования: '))
b = float(input('Верхний предел интегрирования: '))

result = num_int(a, b, xy)
print(f'ОИ от полинома Лагранжа на отрезке [{a}, {b}] равен: {result}')
